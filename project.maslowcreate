{
    "atomType": "Molecule",
    "name": "Rotational Pattern",
    "x": 0,
    "y": 0,
    "uniqueID": 755674,
    "ioValues": [
        {
            "name": "Shape",
            "ioValue": 10
        },
        {
            "name": "Angle",
            "ioValue": 90
        },
        {
            "name": "Number",
            "ioValue": 4
        }
    ],
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Input",
            "name": "Shape",
            "x": 0.013333333333333334,
            "y": 0.2681992337164751,
            "uniqueID": 422066,
            "ioValues": []
        },
        {
            "atomType": "Input",
            "name": "Angle",
            "x": 0.013333333333333334,
            "y": 0.4559386973180076,
            "uniqueID": 237670,
            "ioValues": []
        },
        {
            "atomType": "Input",
            "name": "Number",
            "x": 0.013333333333333334,
            "y": 0.6168582375478927,
            "uniqueID": 442607,
            "ioValues": []
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.527086383601757,
            "y": 0.3409961685823755,
            "uniqueID": 212286,
            "ioValues": [
                {
                    "name": "GeometryToRotate",
                    "ioValue": 10
                },
                {
                    "name": "Number",
                    "ioValue": 4
                },
                {
                    "name": "Degrees",
                    "ioValue": 90
                }
            ],
            "code": "//You can learn more about all of the available methods at https://jsxcad.js.org/app/UserGuide.html \n\n\nfunction main(GeometryToRotate, Number, Degrees){\n  Number = parseInt(Number);\n  Degrees = parseInt(Degrees);\n  var partsArray = [];\n  var i = 0;\n  while(i <= Number){\n      console.log(i)\n      partsArray.push(rotate([0,0,3.1415*(i*Degrees)/180], GeometryToRotate));\n      i++;\n  }\n  \n  return union(partsArray);\n}\n\nreturn main(GeometryToRotate, Number, Degrees)"
        },
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.9978038067349926,
            "y": 0.5210727969348659,
            "ioValues": []
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "number or geometry",
            "ap2Name": "GeometryToRotate",
            "ap2Primary": false,
            "ap1ID": 422066,
            "ap2ID": 212286
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "Degrees",
            "ap2Primary": false,
            "ap1ID": 237670,
            "ap2ID": 212286
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "Number",
            "ap2Primary": false,
            "ap1ID": 442607,
            "ap2ID": 212286
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap2Primary": false,
            "ap1ID": 212286
        }
    ],
    "fileTypeVersion": 1,
    "filetypeVersion": 1,
    "circleSegmentSize": 2
}